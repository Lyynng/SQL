--------------TRIGGER----------------

--Create a trigger when updating or inserting data
--of table TONKHO, column SLCuoi is calculated according to the formula 
--SLCuoi= SLDau + TongSLN – TongSLX

CREATE TRIGGER TR_TONKHO_SLCUOI ON TONKHO
FOR INSERT, UPDATE 
AS
	UPDATE TONKHO SET SLCUOI =
	(
		SELECT TONKHO.[SLDAU] + TONKHO.TONGLN
		FROM TonKho INNER JOIN inserted 
		ON TonKho.MaVTu = Inserted.MaVTu
		AND TONKHO.NAMTHANG = Inserted.NAMTHANG)
	FROM inserted
	WHERE TONKHO.MAVTU = Inserted.MAVTU
	AND TONKHO.NAMTHANG = Inserted.NAMTHANG

--Create a trigger when updating the SLNhap column
--of the CTPNHAP table, the TongSLN column of the TONKHO table is okay
--Update accordingly.

CREATE TRIGGER Tr_tonkho_ctpnhap ON CTPNHAP
FOR UPDATE AS DECLARE @TongSLN INT;

SELECT @TongSLN = SUM(CTPNHAP.SLNHAP)
FROM CTPNHAP INNER JOIN PNHAP ON CTPNHAP.SoPn = PNHAP.SoPn , INSERTED
WHERE CTPNHAP.MAVTU = INSERTED.MAVTU
AND CTPNHAP.SoPn IN 
( 
	SELECT CTPNHAP.SoPn
	FROM CTPNHAP INNER JOIN PNHAP ON CTPNHAP.SoPn = PNHAP.SoPn,
	(
		SELECT PNHAP.NgayNhap
		FROM CTPNHAP INNER JOIN PNHAP ON CTPNHAP.SoPn = PNHAP.SoPn, INSERTED
		WHERE CTPNHAP.MAVTU = INSERTED.MAVTU AND CTPNHAP.SoPn = INSERTED.SoPn) AS tmp
	WHERE CTPNHAP.MAVTU = INSERTED.MAVTU
	AND YEAR(PNHAP.NGAYNHAP) = YEAR(tmp.NGAYNHAP)
	AND MONTH(PNHAP.NGAYNHAP) = MONTH(tmp.NGAYNHAP)
	)
UPDATE [dbo].[TONKHO] SET @TongSLN = @TONGSLN 
FROM INSERTED INNER JOIN PNHAP
ON INSERTED.SoPN = PNHAP.SoPN
WHERE TONKHO.MAVTU= INSERTED.MAVTU AND LEFT (NAMTHANG,4) = YEAR(NGAYNHAP)
AND RIGHT (NAMTHANG,2) = FORMAT (MONTH(NGAYNHAP),'00')

--Create a trigger when updating the SLXuat column of the table
--CTPXUAT then the TongSLX column of the TONKHO table is updated follow.

CREATE TRIGGER Tr_SLX_ctxuat ON [dbo].[CTPXUAT]
FOR UPDATE AS DECLARE @TongSLN INT;

SELECT @TongSLN = SUM(CTPXUAT.SLXUAT)
FROM CTPXUAT JOIN PXUAT 
ON CTPXUAT.SOPX = PXUAT.SOPX , INSERTED
WHERE CTPXUAT.MAVTU = INSERTED.MAVTU
AND CTPXUAT.SOPX IN 
( 
	SELECT CTPXUAT.SOPX
	FROM CTPXUAT INNER JOIN PXUAT ON CTPXUAT.SOPX = PXUAT.SOPX,
	(
		SELECT PXUAT.NGAYXUAT
		FROM CTPXUAT INNER JOIN PXUAT ON CTPXUAT.SOPX = PXUAT.SOPX, INSERTED
		WHERE CTPXUAT.MAVTU = INSERTED.MAVTU AND CTPXUAT.SOPX = inserted.SOPX) tmp
	WHERE CTPXUAT.MAVTU = INSERTED.MAVTU
AND YEAR(PXUAT.NGAYXUAT) = YEAR(tmp.NGAYXUAT)
AND MONTH(PXUAT.NGAYXUAT) = MONTH(tmp.NGAYXUAT)
)
UPDATE [dbo].[TONKHO] SET @TongSLN = @TONGSLN FROM INSERTED INNER JOIN PNHAP
ON INSERTED.SOPX = PNHAP.SoPN
WHERE TONKHO.MAVTU= INSERTED.MAVTU AND LEFT (NAMTHANG,4) = YEAR(NGAYNHAP)
AND RIGHT (NAMTHANG,2) = FORMAT (MONTH(NGAYNHAP),'00')

--Create a trigger when updating or inserting the SLNhap column of the CTPNHAP table
--then the total quantity entered <= total quantity ordered in table CTDONDH

CREATE TRIGGER Tr_CTPNHAP_SOLUONG_NHAP ON CTPNHAP
FOR UPDATE, INSERT AS
IF( 
	SELECT SUM(CTPNHAP.SLNHAP)
	FROM CTPNHAP INNER JOIN inserted 
	ON CTPNHAP.MAVTU = inserted.MAVTU )
	>
	(
		SELECT SUM (CTDONDH.SLDAT)
		FROM CTDONDH INNER JOIN inserted
		ON CTDONDH.MAVTU = inserted.MAVTU
	)
BEGIN 
	PRINT N'Tổng SL nhập đã vượt quá Tổng SL đặt hàng' 
	ROLLBACK TRAN 
END

--Create a trigger when deleting a CTPNHAP column
--The TONKHO table's TongSLN is updated accordingly 

CREATE TRIGGER Tr_delete_SLX_ctxuat ON [dbo].[CTPXUAT]
FOR DELETE AS DECLARE @TongSLN INT;

SELECT @TongSLN = SUM(CTPXUAT.SLXUAT)
FROM CTPXUAT JOIN PXUAT ON CTPXUAT.SOPX = PXUAT.SOPX , INSERTED
WHERE CTPXUAT.MAVTU = INSERTED.MAVTU
AND CTPXUAT.SOPX IN 
( 
	SELECT CTPXUAT.SOPX
	FROM CTPXUAT INNER JOIN PXUAT ON CTPXUAT.SOPX = PXUAT.SOPX,
	(
		SELECT PXUAT.NGAYXUAT
		FROM CTPXUAT INNER JOIN PXUAT ON CTPXUAT.SOPX = PXUAT.SOPX, INSERTED
		WHERE CTPXUAT.MAVTU = INSERTED.MAVTU AND CTPXUAT.SOPX = inserted.SOPX) AS tmp
	WHERE CTPXUAT.MAVTU = INSERTED.MAVTU
	AND YEAR(PXUAT.NGAYXUAT) = YEAR(tmp.NGAYXUAT)
	AND MONTH(PXUAT.NGAYXUAT) = MONTH(tmp.NGAYXUAT)
)
UPDATE [dbo].[TONKHO] SET @TongSLN = @TONGSLN FROM INSERTED INNER JOIN PNHAP
ON INSERTED.SOPX = PNHAP.SoPN
WHERE TONKHO.MAVTU= INSERTED.MAVTU AND LEFT (NAMTHANG,4) = YEAR(NGAYNHAP)
AND RIGHT (NAMTHANG,2) = FORMAT (MONTH(NGAYNHAP),'00')

----------TRANSACTION-------
CREATE TABLE account (
	account_id INT PRIMARY KEY,
	accname nvarchar (10),
	amount int)

INSERT INTO account
VALUES (1, 'Acc1', 100),
		(2, 'Acc2', 200),
		(3, 'Acc3', 500),
		(4, 'Acc4', 0)

BEGIN TRAN 
-- Eliminate Acc2:100
UPDATE account 
SET amount = amount + 100
WHERE account_id =2

-- Plus Acc3:100
UPDATE account 
SET amount = amount - 100
WHERE account_id =3

SELECT * FROM account
COMMIT ROLLBACK
